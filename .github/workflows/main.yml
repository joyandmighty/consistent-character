name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  determine-version:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    outputs:
      new_version: ${{ steps.semantic.outputs.new_version }}
      should_release: ${{ steps.semantic.outputs.should_release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/exec conventional-changelog-conventionalcommits

      - name: Determine Version
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RESULT=$(npx semantic-release --dry-run)
          VERSION=$(echo "$RESULT" | grep -oP "The next release version is \K[0-9]+\.[0-9]+\.[0-9]+" || echo "")
          if [ ! -z "$VERSION" ]; then
            echo "new_version=$VERSION" >> $GITHUB_OUTPUT
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=" >> $GITHUB_OUTPUT
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: determine-version
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.determine-version.outputs.should_release == 'true') ||
      (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main')
    runs-on: LargerRunner
    steps:
      - name: Debug Job Conditions
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "New version: ${{ needs.determine-version.outputs.new_version }}"
          echo "Should release: ${{ needs.determine-version.outputs.should_release }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          # Remove unnecessary large packages
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          # Clear docker images
          docker system prune -af
          # Show available space
          df -h

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
          buildkitd-flags: --debug

      - name: Log in to Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ needs.determine-version.outputs.new_version }},enable=${{ needs.determine-version.outputs.new_version != '' }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ needs.determine-version.outputs.new_version }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          no-cache: true
          build-args: |
            BUILDKIT_INLINE_CACHE=0
            VERSION=${{ needs.determine-version.outputs.new_version || 'dev' }}
          provenance: false

  create-release:
    needs: [determine-version, build-and-push]
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/main' && 
      needs.determine-version.outputs.should_release == 'true'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/exec conventional-changelog-conventionalcommits

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release 